---
- name: Install postgresql prerequisite
  apt: name=python-psycopg2

- name: Install Icinga2 IDO modules on Debian family
  apt: name=icinga2-ido-pgsql
       state=latest


# - name: Create Icinga2 IDO Database User and configure Grants
#   postgresql_user: 
#     name: '{{ icinga2_db_user }}'
#     password: '{{ icinga2_db_pass }}'
#   delegate_to: 'monitor-02.bdsk.boxdice.com'    
#   become: yes 
#   become_user: 'postgres'
#
#- name: Create a IDO Database for Icinga2
#  postgresql_db: name={{ icinga2_db }}
#            state=present
#            login_user={{ icinga2_db_user }}
#            login_pasword={{ icinga2_db_pass }}
#  register: icinga_ido_db
#
#- name: Configure Grants for Icinga2 IDO DB User
#  postgresql_user: name={{ icinga2_db_user }}
#              password={{ icinga2_db_pass }}
#              state=present
#              priv="{{ icinga2_db }}.*:GRANT,INSERT,SELECT,UPDATE,DELETE,DROP,CREATE VIEW,INDEX,EXECUTE"
#              login_user= {{ postgres.username  }}
#              login_password= {{ postgres.password }}
#
- name: Create database and users
  include: ../roles/postgres/tasks/create_db.yml
  when: control is defined and
        control.postgres == True


#- name: Import the IDO Schema on Icinga Web Database (only once)
#  postgresql_db: name={{ icinga2_db }}
#            state=import
#            target={{ icinga2_web_postgresql_schema_debian }}
#  #when: icinga_ido_db.changed == true
#            #TODO: import schema

- name: Configure Icinga2 Ido postgresql Feature
  template: src=ido-pgsql.conf.j2
            dest={{ icinga2_ido_postgresql_conf }}
            backup=yes
            owner=nagios
            group=nagios
            mode=0640

- name: Enable Icinga2 Ido postgresql Feature
  command: "icinga2 feature enable ido-pgsql"
  register: features_result
  changed_when: "'for these changes to take effect' in features_result.stdout"
  notify:
   - restart icinga2

- name: Install Icinga Web2 on Debian family and module monitoring
  apt: name={{ item.package }}
       state=latest
  with_items: 
    - '{{ icinga2_web2_ui_deb }}'
  tags: 
    - icinga2-ansible-web2-ui-install



- name: Create database and users web2
  include: ../roles/postgres/tasks/create_db.yml
  when: control is defined and
        control.postgres == True
  vars: 
    postgres:
      username: "{{ icinga2_web2_db_user }}"
      password: "{{ icinga2_web2_db_pass }}"
      database: "{{ icinga2_web2_db }}"

  #TODO: run as the first one
- name: Create a Web Database for Icinga2
  postgresql_db: name={{ icinga2_web2_db }}
            state=present
  register: icinga_web_db
  become_user: name={{ icinga2_web2_db_user }}


#- name: Create Icinga2 Web Database User and configure Grants
#  postgresql_user: name={{ icinga2_web2_db_user }}
#              password={{ icinga2_web2_db_pass }}
#              state=present
#              priv="{{ icinga2_web2_db }}.GRANT,INSERT,SELECT,UPDATE,DELETE,DROP,CREATE VIEW,INDEX,EXECUTE"
#              db={{ icinga2_web2_db }}

- name: Import the Web Schema on Icinga Web Database (only once)
  postgresql_db: name={{ icinga2_web2_db }}
            state=import
            template={{ icinga2_web2_postgresql_schema_debian }}
  when: icinga_web_db.changed == true

- name: Configure Icinga2 Ido postgresql Feature
  template: src=ido-postgresql.conf.j2
            dest={{ icinga2_ido_postgresql_conf }}
            backup=yes
            owner=nagios
            group=nagios
            mode=0640

- name: Restart HTTPD and Icinga2 to Apply the Configuration
  service: name={{ item }}
           state=restarted
           enabled=yes
  with_items:
    - nginx
    - icinga2

- name: Add user www-data to group icingaweb2
  user: name=www-data
        groups=icingaweb2

- name: Adjust Directory Owener and Group
  file: path=/etc/icingaweb2/modules owner=www-data group=icingaweb2 mode=0755
        state=directory
        recurse=yes

- name: Create Directory Owener and Group
  file: path=/etc/icingaweb2/modules/{{ item }} owner=www-data group=icingaweb2 mode=0755
        state=directory
  with_items:
    - monitoring
    - translation

- name: Icinga Web2 Installation finished (Debian)
  debug: msg="Now generate a token with 'icingacli setup token create' and go at http://IP//icingaweb2/setup to continue the installation"
  tags: icinga2-ansible-web2-ui-install

- name: CLI SETUP TOKEN
  command: "icingacli setup token create"
  tags: 
    - icinga_config

- name: enable monitoring
  command: "ln -s /usr/share/icingaweb2/modules/monitoring /etc/icingaweb2/enabledModules/monitoring"
  tags:
    - enable-monitoring

- name: configure monitoring backend
  template:
    src: etc/icingaweb2/resources.ini.j2
    dest: /etc/icingaweb2/resources.ini
  tags:
    - icinga2-config
